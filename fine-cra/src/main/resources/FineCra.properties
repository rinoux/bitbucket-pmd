pmd.rule.tableName=fr_develop_pmd_rule
cra.repo.settings.validation.notanumber.msg = \u503c\u5fc5\u987b\u4e3a >= 0 \u7684\u6570\u5b57
cra.repo.settings.validation.ctagsnotconfigured.msg=Ctags must be configured to use this feature. Go to the
cra.repo.settings.validation.pathnotdefined.msg = \u5206\u6790\u5668\u542f\u7528\u65f6\u5fc5\u987b\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84
cra.repo.settings.save.sucess.msg = \u66f4\u6539\u4fdd\u5b58\u6210\u529f
cra.repo.settings.not.authorized.msg = \u4f60\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u6b64\u9875\u9762.
cra.repo.settings.ctags.disable.button = Disabled
cra.repo.settings.ctags.disable.tooltip = Disables code cross-referencing feature
cra.repo.settings.ctags.enable.button = Enabled
cra.repo.settings.ctags.enable.tooltip = Enables code cross-referencing feature
cra.repo.settings.bugprediction.disable.button = Disabled
cra.repo.settings.bugprediction.disable.tooltip = Disables bug prediction feature
cra.repo.settings.bugprediction.enable.button = Enabled
cra.repo.settings.bugprediction.enable.tooltip = Enables bug prediction feature
cra.repo.settings.bugprediction.regex.label = Bugfix indicator regex
cra.repo.settings.bugprediction.regex.description = Commits with messages that contain matches for this regex will be considered as bug-fixing commits. Examples: "fix(es|ed)?" or "fixes [A-Z]+-\\d+"
cra.repo.settings.bugprediction.alerttext.label = Alert text
cra.repo.settings.bugprediction.alerttext.description = This text will be shown in the pull request comment for the reviewer when a file is considered as a hotspot.
cra.repo.settings.validation.urlinvalid.msg = URL is invalid or not reachable.
cra.repo.settings.validation.pathinvalid.msg = File could not be found or is not accessable.
cra.repo.settings.validation.codenarc.xmlfile.msg = XML files are not supported as CodeNarc config files. Please use a Groovy file.
cra.repo.settings.validation.urlnotdefined.msg = URL or path must be given.

cra.repo.settings.prtemplates.disable.button = Disabled
cra.repo.settings.prtemplates.disable.tooltip = Disables bug prediction feature
cra.repo.settings.prtemplates.enable.button = Enabled
cra.repo.settings.prtemplates.enable.tooltip = Enables bug prediction feature

cra.mergecheck.veto.title = \u4ee3\u7801\u68c0\u67e5\u8b66\u544a\uff1a{0}
cra.mergecheck.veto.msg = \u8b66\u544a\uff1a\u68c0\u67e5\u5230{2}\u4e2aFATAL\u6216ERROR\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u8fbe\u5230{0}\u5141\u8bb8\u7684{1}\u4e2a\u4e0a\u9650

cra.review.analyzer.failed.msg = \u8fd0\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\u65f6\u53d1\u751f\u9519\u8bef {0}: "{1}". \u8bf7\u68c0\u67e5\u65e5\u5fd7\u6587\u4ef6.
cra.review.ctags.failed.msg = Detected a problem while running Ctags: "{0}". Check the Bitbucket server logs for details.
cra.review.failed.msg = Detected a problem while running on this pull request: "{0}". Check the Bitbucket server logs for details.

cra.license.noinfo.msg = License could not be verified for Code Review Assistant due to an internal error.
cra.license.expired.msg = Your evaluation license of Code Review Assistant expired. If you liked this add-on, please use the 'Buy' button in the Universal Plug-in Manager to purchase a new license.
cra.license.typemismatch.msg = Your Code Review Assistant license does not match the license for this installation. Please get the right license and try again.
cra.license.usermismatch.msg = Your Code Review Assistant installation is licensed for a different number of users than your Bitbucket installation.
cra.license.versionmismatch.msg = Your license for maintenance of Code Review Assistant is not valid for this version. Please renew your license.
cra.license.unknown.error.msg = An unknown error occurred while retrieving license information for Code Review Assistant.
cra.license.nolicense.msg = No license found for Code Review Assistant. Please go to the Universal Plug-in Manager to purchase one.
cra.license.unresolved.exception.msg = Failed to retrieve license information for Code Review Assistant add-on.

cra.run.analysis.label = \u542f\u52a8\u4ee3\u7801\u68c0\u67e5
cra.run.analysis.tooltip = Runs the code analysis of Code Review Assistant (note that this is only necessary if you only made changes in the plug-in settings without pushing something to this repository, otherwise the analysis is triggered automatically).
cra.remove.comments.label = \u5220\u9664\u4ee3\u7801\u68c0\u67e5\u8bc4\u8bba
cra.remove.comments.tooltip = Removes all pull request comments made by the code analysis of Code Review Assistant.

cra.repo.settings.title = {0} / {1} \u7684\u4ee3\u7801\u68c0\u67e5\u8bbe\u7f6e
cra.repo.settings.heading = \u4ee3\u7801\u68c0\u67e5\u8bbe\u7f6e
cra.repo.settings.error.title = \u53d1\u751f\u9519\u8bef - \u9700\u8981\u7528\u6237\u5e72\u9884
cra.repo.settings.error.seebelow = \u4fdd\u5b58\u65f6\u53d1\u751f\u5982\u4e0b\u9519\u8bef
cra.repo.settings.showSeverityIcon.enable.label = \u663e\u793a\u5371\u9669\u7ea7\u522b\u56fe\u6807
cra.repo.settings.enabled.checkbox = \u542f\u7528
cra.repo.settings.branchOptions.label = \u5206\u652f\u9009\u9879
cra.repo.settings.checkstyle.enable.label = \u542f\u7528 Checkstyle
cra.repo.settings.errorlimit.label = \u5141\u8bb8pull request\u5408\u5e76\u7684\u51b2\u7a81\u6570\u91cf\u9650\u5236
cra.repo.settings.pmd.enable.label = \u542f\u7528 PMD
cra.repo.settings.pmd.examples.enable.label = \u663e\u793a PMD \u51b2\u7a81\u793a\u4f8b
cra.repo.settings.scalastyle.enable.label = Enables Scalastyle
cra.repo.settings.codenarc.enable.label = Enables CodeNarc
cra.repo.settings.jslint.enable.label = Enables JSLint
cra.repo.settings.jshint.enable.label = Enables JSHint
cra.repo.settings.submit = \u4fdd\u5b58
cra.repo.settings.errorlimit.description = \u5408\u5e76pull requets\u65f6\u5141\u8bb8\u7684\u6700\u5927ERROR \u6216 FATAL\u6570\u91cf\uff0c\u7559\u7a7a\u4e3a\u9ed8\u8ba4\u5141\u8bb8\u5408\u5e76\u3002
cra.repo.settings.custom.tool.path.label = Absolute program path
cra.repo.settings.custom.tool.path.description = The absolute path to the tool to invoke, e.g. /usr/local/bin/jscs
cra.repo.settings.issue.regex.label = Violations regex
cra.repo.settings.issue.regex.description = A Java regular expression to parse the output of the tool. It should contain named groups for the file path, the line number and the message. Example: (?<file>.*?): line (?<line>\\d+), col \\d+, (?<message>.*)
cra.repo.settings.analyzer.name.label = Custom analyzer name
cra.repo.settings.analyzer.name.description = This name will be used to report violations in the code of your pull requests.
cra.repo.settings.custom.enabled.checkbox = Custom analyzer enabled
cra.repo.settings.files.to.process.pattern.label = File endings to analyze
cra.repo.settings.files.to.process.pattern.description = A list of file endings which should be analyzed, separated by whitespace. Example: js javascript
cra.repo.settings.custom.tool.args.label = Program arguments
cra.repo.settings.custom.tool.args.description = The arguments for the tool including a placeholder %f which will be replaced with the path to the file to analyze. Example: --preset=jquery --reporter=inline %f
cra.repo.settings.custom.mandatory.field.error = Must not be empty
cra.repo.settings.custom.command.not.found.error = Command not found or not executable
cra.repo.settings.custom.command.args.no.placeholder.error = Command arguments must contain %f as a placeholder for the file path
cra.repo.settings.custom.regex.named.group.error = Regex must contain named group elements 'file', 'line' and 'message'
cra.repo.settings.text.max.length.error = Text length must not be greater than 255 characters.
cra.repo.settings.duplicate.analyzer.name.error = Duplicate custom analyzer name found: {0}
cra.repo.settings.bugprediction.alert.text = This file keeps requiring bug-fixes and is therefore considered a "hotspot". I recommend to spend some more time reviewing it.
cra.bugprediction.failed.msg = Bug prediction analysis failed because of the following error: {0}
cra.repo.settings.regex.invalid.error = Syntax error in regular expression
cra.repo.settings.defaultseverity.label = Default severity
cra.repo.settings.defaultseverity.description = Because no severities are supported for custom analyzers, you can define which default severity violations of this analyzer should have.
cra.repo.settings.onlyone.errorlimit.description = Because this analyzer does not support different severities, you can define which default severity violations of this analyzer should have.
